[tool.poetry]
name = "redispatcher"
version = "0.2.0"
description = "Dispatch and run distributed work asynchronously, brokered by Redis"
authors = ["Rafal Stapinski <stapinskirafal@gmail.com>"]
keywords = ["redis", "queue", "broker", "pub sub", "asynchronous message", "celery", "dispatcher", "worker"]
readme = "README.md"
license = "MIT"
homepage = "https://rafalstapinski.github.io/redispatcher"
repository = "https://github.com/rafalstapinski/redispatcher"


[tool.poetry.dependencies]
python = "^3.8"
aioredis = "^1.3.1"
pydantic = "^1.8.1"

[tool.poetry.dev-dependencies]
black = "^22.3.0"
pylint = "^2.13.5"
isort = "^5.10.1"
pytest = "^7.1.1"
elastic-apm = "^6.9.1"
mkdocs = "^1.3.0"
mkdocs-material = "^8.2.9"
pytest-redis = "^2.4.0"
pytest-asyncio = "^0.18.3"

[tool.poetry.scripts]
monitor = "redispatcher.monitor:monitor_cli"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
known_local_folder = ["test"]

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.black]
line-length = 120

[tool.pylint.messages_control]
disable = "all"
enable = "unused-import"
